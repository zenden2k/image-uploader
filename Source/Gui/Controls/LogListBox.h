// This file was generated by WTL subclass control wizard 
// LogListBox.h : Declaration of the CLogListBox

#ifndef LOGLISTBOX_H
#define LOGLISTBOX_H

#pragma once

#include "atlheaders.h"

#include "Core/Logging/Logger.h"

struct LogListBoxItem
{
    CString strTitle;
    int TitleHeight;

    CString strText;
    int TextHeight;

    CString Info;
    int InfoHeight;

    ILogger::LogMsgType Type;
    RECT InfoDim;

    CString Time;
    int nLinesCount;
};

// CLogListBox

class CLogListBox :
    public CWindowImpl<CLogListBox, CListBox,CControlWinTraits>
{
    public:
        CLogListBox();
        ~CLogListBox();
        DECLARE_WND_SUPERCLASS(_T("CLogListBox"), CListBox::GetWndClassName())
        
         BEGIN_MSG_MAP(CLogListBox)
            MSG_WM_KILLFOCUS(OnKillFocus)
            MESSAGE_HANDLER(OCM_DRAWITEM, OnDrawitem)
            MESSAGE_HANDLER(WM_DESTROY, OnDestroy)
            MESSAGE_HANDLER(OCM_MEASUREITEM, OnMeasureItem)
            MESSAGE_HANDLER(WM_KEYDOWN, OnKeyDown)
            MESSAGE_HANDLER(WM_CHAR, OnChar)
         END_MSG_MAP()

         // Handler prototypes:
         //  LRESULT MessageHandler(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);
         //  LRESULT CommandHandler(WORD wNotifyCode, WORD wID, HWND hWndCtl, BOOL& bHandled);
         //  LRESULT NotifyHandler(int idCtrl, LPNMHDR pnmh, BOOL& bHandled);
        LRESULT OnDestroy(UINT uMsg, WPARAM wParam, LPARAM lParam,BOOL& bHandled);
        LRESULT OnDrawitem(UINT uMsg, WPARAM wParam, LPARAM lParam,BOOL& bHandled);
        LRESULT OnMeasureItem(UINT uMsg, WPARAM wParam, LPARAM lParam,BOOL& bHandled);
        LRESULT OnKeyDown(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);
        LRESULT OnChar(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);
        int AddString(ILogger::LogMsgType Type, const CString& strTitle, const CString& strText, const CString& szInfo, const CString& Time);
        LogListBoxItem* getItemFromIndex(int index) const;
        LRESULT OnKillFocus(HWND hwndNewFocus);
        CIconHandle ErrorIcon, WarningIcon, InfoIcon;
        CFont UnderlineFont, NormalFont, BoldFont;
        BOOL SubclassWindow(HWND hWnd);
        void Init();
        void Clear();
        void SelectAll();
        
};

#endif // LOGLISTBOX_H


