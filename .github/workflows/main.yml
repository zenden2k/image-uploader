name: Compile and test Image Uploader

on:
  pull_request:
    paths:
      - .github/workflows/main.yml
      - Source/**
      - Contrib/Include/**
  push:
    branches:
      - 'master'
    paths:
      - .github/workflows/main.yml
      - Source/**
      - Contrib/Include/**
  workflow_dispatch:
 
jobs:
  windows:
    name: run on windows
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
    env:
      BUILD_TYPE: ${{ matrix.build_type }}
    steps:
    - uses: actions/checkout@v2
    - name: Prepare sources
      shell: bash
      working-directory: ${{github.workspace}}/Source
      run: cp versioninfo.h.dist versioninfo.h
    - name: Get Conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 1.57.0
    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/Build
    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/Build
      run: cmake $GITHUB_WORKSPACE/Source -G "Visual Studio 17 2022" -A Win32 -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CONFIGURATION_TYPES:STRING=$BUILD_TYPE -DCMAKE_TRY_COMPILE_CONFIGURATION:STRING=$BUILD_TYPE
    - name: Build
      working-directory: ${{github.workspace}}/Build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    - name: Tests
      working-directory: ${{github.workspace}}/Build
      shell: bash
      run: ./Tests/Release/Tests.exe --dir "${{github.workspace}}/Source/Tests/TestData" --sqdir "${{github.workspace}}/Source/Core/Scripting/API/Tests/"
    - name: Copy executable
      shell: bash
      working-directory: ${{github.workspace}}/Build
      run: cp "./GUI/Release/Image Uploader.exe" ./GUI/Release/ImageUploader.exe
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      if: "env.BUILD_TYPE == 'Release'"
      with:
        name: windows_artifacts
        path: |
          ${{github.workspace}}/Build/GUI/Release/ImageUploader.exe
          ${{github.workspace}}/Build/CLI/Release/CLI.exe
          ${{github.workspace}}/Build/Tests/Release/Tests.exe
          ${{github.workspace}}/Build/ServersChecker/Release/ServersChecker.exe
  ubuntu:
    name: run on ubuntu
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
    env:
      BUILD_TYPE: ${{ matrix.build_type }}
    steps:
    - uses: actions/checkout@v2
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: Prepare sources
      shell: bash
      working-directory: ${{github.workspace}}/Source
      run: cp versioninfo.h.dist versioninfo.h
    - name: Get Conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 1.57.0
    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/Build
    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/Build
      run: cmake $GITHUB_WORKSPACE/Source -G "Ninja Multi-Config" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CONFIGURATION_TYPES:STRING=$BUILD_TYPE -DCMAKE_TRY_COMPILE_CONFIGURATION:STRING=$BUILD_TYPE
    - name: Build
      working-directory: ${{github.workspace}}/Build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    - name: Tests
      working-directory: ${{github.workspace}}/Build
      shell: bash
      run: ./Tests/Release/Tests --dir "${{github.workspace}}/Source/Tests/TestData" --sqdir "${{github.workspace}}/Source/Core/Scripting/API/Tests/"
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      if: "env.BUILD_TYPE == 'Release'"
      with:
        name: ubuntu_artifacts
        path: |
          ${{github.workspace}}/Build/CLI/Release/CLI
          ${{github.workspace}}/Build/Tests/Release/Tests
